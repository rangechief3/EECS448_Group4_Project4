The way our team integrated code from one another is through GitHub. Our team leader: Jake Wagner, created a GitHub Repository titled: “EECS448_Group4_Project4”. We then created a google docs sheet where we separated various tasks that each of us planned to complete. For these tasks we set up our own branches. For example, the branch that I worked on was called “Test Computer” which was designated for working on the Computer class. This class was in charge of the logic for the AI players in our game, and how they function/play. The fact that we used our own branches made the integration of our code very easy as we could work asynchronously and be able to commit/upload our code to the repository at any time. The merging process is also very easy through Github as once the code is properly working, we can easily merge it to the “Master” branch which is essentially the final version of our code. 
The integration strategy we used is the sandwich integration. This combines the two strategies of top-down and bottom-up. Logic artifacts are generally situated close to the root while operational artifacts are generally found in lower levels. The highest level is main, and the lowest level is the button class. We slowly worked to add on to both these and the other levels simultaneously. All in all, we found this form of integration very successful throughout the course of the year as we mimicked essentially the same process for each project. We find this efficient as we can all work asynchronously and then meet when figuring out the details. 
